/*
Theme Name: icx
Theme URI: https://icedterminal.com
Author: icedterminal
Author URI: http://icedterminal.com
Description: n/a
Version: 2021.1.0
License: GNU General Public License v3
License URI: https://www.gnu.org/licenses/gpl.html
Tags: one-column, two-columns, custom-menu, featured-images, microformats, sticky-post, threaded-comments,
*/

/*

DEVELOPMENT VERSION. DO NOT USE FOR LIVE. MAKE CHANGES AND MINIFY.

For themes, swap the color palette. With light themes, use xyz. With dark themes, use zyx.
All color values are HSL/A. Please keep this consistent.

Why HSL/A? This is a significantly easier way to work with color.
- H = What hue you want between 0 and 360. Red at 0, Orange, Yellow, Green, Blue, Purple and Red at 360.
- S = What saturation you want between 0% (dull) and 100% (vibrant).
- L = What lightness you want between 0% (dark) an 100% (bright).
- And if A is specified, what opacity you want between 0% (transparent) and 100% (opaque).

The invalid media target below will allow you to see all the colors used in the CSS with editors
that support live color picking and previews. Such as VS Code and Dreamweaver.

*/

@media (min-width:20000px) {
    body {
        /* Tropical Paradise, Light Mode */
        background: hsl(335, 100%, 50%);
        background: hsl(15, 100%, 55%);
        background: hsl(0, 0%, 88%);       /* Body background */
        background: hsl(0, 0%, 96%);       /* Wrap background */
        background: hsl(0, 0%, 8%);        /* Text color */

        /* Urban Neon, Dark Mode */
        background: hsl(280, 100%, 58%);
        background: hsl(182, 100%, 50%);
        background: hsl(0, 0%, 10%);       /* Body background */
        background: hsl(0, 0%, 18%);       /* Wrap background */
        background: hsl(33, 10%, 91%);     /* Text color */
        background: hsl(0, 0%, 0%);        /* Box shadow */
    }
}

/*********************************************************************************************************

    COLOR THEMES

    The following section covers theme targeting. The only values here should be color based.
    This allows for supporting Light and Dark mode choices for user interface. Rather than define
    the colors over and over, define color once, use the variable.

*********************************************************************************************************/

/*********************************************************************************************************

    Light Theme

*********************************************************************************************************/

@media(prefers-color-scheme:light) {
    :root {
        --back-light: hsl(0, 0%, 88%);
        --text-light: hsl(0, 0%, 8%);
    }

    body {
        background-color: var(--back-light);
        color: var(--text-light);
    }
}

/*********************************************************************************************************

    Dark Theme.

*********************************************************************************************************/
@media(prefers-color-scheme:dark) {
    :root {
        --back-dark: hsl(0, 0%, 10%);
        --wrap-dark: hsl(0, 0%, 18%);
        --text-dark: hsl(33, 10%, 91%);
        --urb-purple: hsl(280, 100%, 58%);
        --urb-blue: hsl(182, 100%, 50%);
        --shadow-dark: hsl(0, 0%, 0%);
    }
/*
    body {
        background-color: var(--back-dark);
        color: var(--text-dark);
    }
*/
    body {
        background: linear-gradient(50deg, var(--urb-purple), var(--urb-blue));
        background-size: 400% 400%;
        animation: gradient 15s ease infinite;
        color: var(--text-dark);
    }
    
    @keyframes gradient {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
    }

    /*
    If you target just 'a', then the admin bar gets fucked up.
    To solve that, target the container where all user generated content is.
    */
    body div#wrapper div#container a {
        background: linear-gradient(0deg, var(--urb-purple), var(--urb-blue));
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        text-decoration: underline;
    }
    header#header, article {
        background: var(--wrap-dark);
    }
    .post::before {
        background: linear-gradient(50deg, var(--urb-purple), var(--urb-blue));
    }

    form > div > label {
        color: var(--text-dark);
    }
    input[type=text],
    input[type=password] {
        background: var(--wrap-dark);
        border: 2px solid var(--back-dark);
        color: var(--text-dark);
    }
    input[type=text]:hover,
    input[type=password]:hover {
        border: 2px solid var(--urb-blue);
    }
    input[type=text]:focus,
    input[type=password]:focus {
        border: 2px solid var(--urb-purple);
    }
    /* What happens to the label when the text box is focused */
    input[type=text]:focus ~ label,
    input[type=password]:focus ~ label {
        color: var(--urb-purple);
        background: var(--wrap-dark);
    }
    input[type=text]:not(:placeholder-shown) ~ label,
    input[type=password]:not(:placeholder-shown) ~ label {
        background: var(--wrap-dark);
    }

}

/*********************************************************************************************************

    RESPONSIVE DESIGN

    The following section covers screen size targeting. The only values here should be sized based.
    Size, Width, Height, Padding, Margin, etc.

*********************************************************************************************************/

/*********************************************************************************************************

    Mobile Devices.
    - Small Portrait.

*********************************************************************************************************/
@media (min-width:320px) {
}

/*********************************************************************************************************

    Mobile Devices.
    - Medium Portrait.
    - Small Landscape.

*********************************************************************************************************/
@media (min-width:481px) {
}

/*********************************************************************************************************

    Mobile Devices.
    - Large Portrait.
    - Medium Landscape.

*********************************************************************************************************/
@media (min-width:641px) {
}

/*********************************************************************************************************

    Mobile Devices.
    - Extra Large Portrait.
    - Large Landscape.
    Desktops.

*********************************************************************************************************/
@media (min-width:961px) {
    .post {  
        width: 90%;
        max-width: 1200px;
        min-height: 500px;
        margin: 1% auto;
        position: relative;
        padding: 1%;
        box-sizing: border-box;
        background-clip: padding-box;
        border: solid 2px transparent;
        border-radius: 2px;
    }
    .post::before {
        content: '';
        position: absolute;
        top: 0; right: 0; bottom: 0; left: 0;
        z-index: -1;
        margin: -2px;
        border-radius: inherit;
    }
    .post::after {
        content: '';
        width: 300px;
        height: 300px;
        background: inherit; 
        position: absolute;
        left: -25px;

        right: 0;
        top: -25px;  

        bottom: 0;
        box-shadow: inset 0 0 0 200px rgba(255,255,255,0.05);
        filter: blur(10px);
    }
    div#search {
        width: 400px;
        margin: 0px auto;
        padding: 20px;
    }
}

/*********************************************************************************************************

    Universal

*********************************************************************************************************/
html { display: flex; width: 100vw; height: 100vh; }
body {
    font-family:Inter,sans-serif;
    font-weight:400;
    width: 100%;
}
pre, code {
    font-family: 'Cascadia Mono', 'Cascadia Code', Consolas, monospace;
    font-weight: 300;
}

.material_input {
    display: inline-block;
    margin: 0;
}
input[type=text],
input[type=password] {
    display: inline-block;
    transition: 0.2s;
    padding: 0 8px;
    height: 34px;
    font-family:Inter,sans-serif;
    font-weight:400;
    font-size: 1em;
    vertical-align: middle;
    border-radius: 2px;
    -webkit-border-radius: 2px;
    -moz-border-radius: 2px;
    font-size: 1em;
}
input[type=text]:focus,
input[type=password]:focus {
    outline: none;
    cursor: text;
    box-shadow: none;
}

/* Required positioning for the use of Labels
   For the labels in forms and the edit row.
*/
form > div {
    position: relative;
}
/* Set up the label default position.
   For the labels in forms and the edit row.
 */
form > div > label {
    position: absolute;
    margin: 0;
    padding: 5px;
    background-color: inherit;
    top: 5px;
    left: 7px;
    pointer-events: none;
    transition:0.1s ease all;
    -moz-transition:0.1s ease all;
    -webkit-transition:0.1s ease all;
    font-size: 1em;
    transform-origin: 0 0;
}
/* What happens to the label when the text box is focused */
input[type=text]:focus ~ label,
input[type=password]:focus ~ label {
    transform: scale(0.8) translateX(0%) translateY(-80%);
}
/* No placeholder text needs to be seen */
::placeholder {
    color: hsla(0, 0%, 0%, 0%);
    opacity: 0%;
}
/* With text in the text box and the absence of the placeholder text, keep the label fixed */
input[type=text]:not(:placeholder-shown) ~ label,
input[type=password]:not(:placeholder-shown) ~ label {
    transform: scale(0.8) translateX(0%) translateY(-80%);
}